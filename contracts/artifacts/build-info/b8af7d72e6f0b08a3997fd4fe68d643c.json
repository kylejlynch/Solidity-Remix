{
	"id": "b8af7d72e6f0b08a3997fd4fe68d643c",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.7",
	"solcLongVersion": "0.8.7+commit.e28d00a7",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/MyContract.sol": {
				"content": "//SPDX\r\n\r\ncontract MyContract {\r\n\r\n}"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"contracts/MyContract.sol": {
				"MyContract": {
					"abi": [],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/MyContract.sol\":10:36  contract MyContract {\r... */\n  mstore(0x40, 0x80)\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/MyContract.sol\":10:36  contract MyContract {\r... */\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa264697066735822122022f002959a1a5e2a89237173647c99e2ab35c0cb439ebf1c878f2422e7e772d164736f6c63430008070033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6080604052348015600f57600080fd5b50603f80601d6000396000f3fe6080604052600080fdfea264697066735822122022f002959a1a5e2a89237173647c99e2ab35c0cb439ebf1c878f2422e7e772d164736f6c63430008070033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH1 0xF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x3F DUP1 PUSH1 0x1D PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x22 CREATE MUL SWAP6 SWAP11 BYTE 0x5E 0x2A DUP10 0x23 PUSH18 0x73647C99E2AB35C0CB439EBF1C878F2422E7 0xE7 PUSH19 0xD164736F6C6343000807003300000000000000 ",
							"sourceMap": "10:26:0:-:0;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "6080604052600080fdfea264697066735822122022f002959a1a5e2a89237173647c99e2ab35c0cb439ebf1c878f2422e7e772d164736f6c63430008070033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x22 CREATE MUL SWAP6 SWAP11 BYTE 0x5E 0x2A DUP10 0x23 PUSH18 0x73647C99E2AB35C0CB439EBF1C878F2422E7 0xE7 PUSH19 0xD164736F6C6343000807003300000000000000 ",
							"sourceMap": "10:26:0:-:0;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "12600",
								"executionCost": "66",
								"totalCost": "12666"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 10,
									"end": 36,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 10,
									"end": 36,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 10,
									"end": 36,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 10,
									"end": 36,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 10,
									"end": 36,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 10,
									"end": 36,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 10,
									"end": 36,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 10,
									"end": 36,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 10,
									"end": 36,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 10,
									"end": 36,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 10,
									"end": 36,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 10,
									"end": 36,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 10,
									"end": 36,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 10,
									"end": 36,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 10,
									"end": 36,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 10,
									"end": 36,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 10,
									"end": 36,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 10,
									"end": 36,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 10,
									"end": 36,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 10,
									"end": 36,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 10,
									"end": 36,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122022f002959a1a5e2a89237173647c99e2ab35c0cb439ebf1c878f2422e7e772d164736f6c63430008070033",
									".code": [
										{
											"begin": 10,
											"end": 36,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 10,
											"end": 36,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 10,
											"end": 36,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 10,
											"end": 36,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 10,
											"end": 36,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 10,
											"end": 36,
											"name": "REVERT",
											"source": 0
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/MyContract.sol\":\"MyContract\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/MyContract.sol\":{\"keccak256\":\"0x26b4c2854492c99a2c8f05813c9d6182dde704703734b30577b70947b356cb4e\",\"urls\":[\"bzz-raw://b89bc58ced283834f6b2768e70e65d8b3a1dc82d293426e3c21cf28e4714c84f\",\"dweb:/ipfs/QmNq76NBgtELXbbbnkQqqbYBGBKFTsRf3hnu5GJddCXGwz\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"errors": [
			{
				"component": "general",
				"errorCode": "1878",
				"formattedMessage": "Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.\n--> contracts/MyContract.sol\n\n",
				"message": "SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.",
				"severity": "warning",
				"sourceLocation": {
					"end": -1,
					"file": "contracts/MyContract.sol",
					"start": -1
				},
				"type": "Warning"
			},
			{
				"component": "general",
				"errorCode": "3420",
				"formattedMessage": "Warning: Source file does not specify required compiler version! Consider adding \"pragma solidity ^0.8.7;\"\n--> contracts/MyContract.sol\n\n",
				"message": "Source file does not specify required compiler version! Consider adding \"pragma solidity ^0.8.7;\"",
				"severity": "warning",
				"sourceLocation": {
					"end": -1,
					"file": "contracts/MyContract.sol",
					"start": -1
				},
				"type": "Warning"
			}
		],
		"sources": {
			"contracts/MyContract.sol": {
				"ast": {
					"absolutePath": "contracts/MyContract.sol",
					"exportedSymbols": {
						"MyContract": [
							1
						]
					},
					"id": 2,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 1,
							"linearizedBaseContracts": [
								1
							],
							"name": "MyContract",
							"nameLocation": "19:10:0",
							"nodeType": "ContractDefinition",
							"nodes": [],
							"scope": 2,
							"src": "10:26:0",
							"usedErrors": []
						}
					],
					"src": "10:26:0"
				},
				"id": 0
			}
		}
	}
}